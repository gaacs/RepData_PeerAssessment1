scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size(50)) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = (50)) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(50)) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
library(grid)
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(fill = "yellow")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_line(colour = "yellow")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(colour = "yellow")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(colour = "none")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(colour = "null")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(colour = "white")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(2,"cm"), legend.key = element_rect(colour = "blue")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(1,"cm"), legend.key = element_rect(colour = "blue")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position.size = "bottom", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key.size = unit(1,"cm"), legend.key = element_rect(colour = "blue")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "bottom", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key = element_rect(colour = "white")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
dev.copy(png, file = "./Desktop/AFM/clusterXdepto.png", width = 1600, height = 900)
dev.off()
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "left", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key = element_rect(colour = "white")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
dev.copy(png, file = "./Desktop/AFM/clusterXdepto.png", width = 1600, height = 900)
dev.off()
gc + geom_point(alpha = 0.4) +
#facet_wrap(~ qTARJETAS, scales = "free") +
geom_text(size = 2.5, colour = "black") +
theme_bw() +
theme(legend.position = "right", axis.text = element_text(size = 14), title = element_text(size = 18, family = "Arial")
, legend.text = element_text(size =12), legend.key = element_rect(colour = "white")) +
scale_y_log10(labels = dollar, breaks = c(1e2,1e3,1e4,3e4)) +
scale_x_log10(labels = comma, breaks = c(1e1,1e2,1e3,1e4,1e5)) +
scale_colour_hue(name = "Cluster") +
scale_size(range = c(8, 24), name = "Ticket medio", labels = dollar) +
labs(title = "Clustering para departamentos\n k-means", x = "\nVolumen", y = "Desviación estándar\n")
dev.copy(png, file = "./Desktop/AFM/clusterXdepto.png", width = 1600, height = 900)
dev.off()
clusplot(txnXdepto4, fit$cluster, color = TRUE, shade = FALSE, labels = 0, lines = 0)
plotcluster(txnXdepto4, fit$cluster)
class(fit)
d <- dist(txnXdepto4, method = "euclidean")
class(d)
d
View(fit)
View(d)
fit <- hclust(d, method = "ward")
class(fit)
fit
table(rownames(txnXdepto3), fit$cluster)
class(fit)
fit
fit <- hclust(d, method = "centroid")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "median")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "single")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "complete")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "average")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "mcquitty")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "ward.D")
plot(fit, cex = 0.3, hang = -1)
fit <- hclust(d, method = "ward.D2")
plot(fit, cex = 0.3, hang = -1)
groups <- cutree(fit, k = 6)
rect.hclust(fit, k = 6, border = "blue")
fit <- hclust(d, method = "ward.D")
plot(fit, cex = 0.3, hang = -1)
groups <- cutree(fit, k = 6)
rect.hclust(fit, k = 6, border = "blue")
fit <- hclust(d, method = "ward.D", members = txnXdepto4$N)
fit <- hclust(d, method = "ward.D", members = 400)
fit <- hclust(d, method = "ward.D", members = 2)
fit <- hclust(d, method = "ward.D")
library(caret)
library(kernlab)
data(spam)
inTrain <- createDataPartition(y = spam$type, p = 0.75, list = FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
set.seed(32343)
modelFit <- train(type ~., data = training, method = "nnet")
warnings()
modelFit
modelFit$finalModel
predictions <- predict(modelFit, newdata = testing)
predictions
confusionMatrix(predictions, testing$type)
pmml(modelFit)
library(pmml)
pmml(modelFit)
fit <- nnet(type ~., data = training)
fit <- nnet(type ~., data = training, size = 4)
predictions <- predict(fit, newdata = testing)
predictions
confusionMatrix(predictions, testing$type)
fit <- nnet(type ~., data = training, size = 4)
predictions <- predict(fit, newdata = testing)
confusionMatrix(predictions, testing$type)
fit
fit$finalModel
modelFit$finalModel
confusionMatrix(predictions, testing$type)
predictions <- predict(modelFit, newdata = testing)
predictions
confusionMatrix(predictions, testing$type)
fit <- nnet(type ~., data = training, size = 4)
fit
fit$finalModel
class(fit)
class(modelFit)
class(fit)
fit$finalModel
predictions <- predict(fit, newdata = testing)
testing$type
predictions
type
fit <- nnet(type ~ ., data = training, size = 4)
pmml.nnet(fit)
fit <- nnet(type ~ ., data = training, size = 2)
class(fit)
predictions <- predict(fit, newdata = testing)
confusionMatrix(predictions, testing$type)
fit <- nnet(y = type ~ ., data = training, size = 2)
fit <- nnet(type ~ ., data = training, size = 2)
fit <- nnet(. ~ type, data = training, size = 2)
fit <- nnet(type ~ ., data = training, size = 2)
class(fit)
fit
modelFit
fit
fit
class(fit)
fit$nnet
fit$nnet.formula
fit$formula
predictions <- predict(fit, newdata = testing)
predictions
pmml.nnet(fit)
str(fit)
confusionMatrix(predictions, testing$type)
set.seed(32343)
modelFit <- train(type ~., data = training, method = "nnet")
warnings()
class(modelFit)
modelFit$finalModel
predictions <- predict(modelFit, newdata = testing)
predictions
confusionMatrix(predictions, testing$type)
pmml(modelFit$finalModel)
rm(list=ls())
constructores <- read.csv("desktop/RUV Mac/Data Products/Grupos Constructores - Cobertura 2015.06.csv", nrows = -1, colClasses = c("character", "numeric", "numeric"))
#constructores$TX_VIVIENDAS <- cut(constructores$NU_VIVIENDAS, quantile(constructores$NU_VIVIENDAS, seq(0,1, length = 5), na.rm = TRUE))
#constructores$TX_ENTIDADES <- cut(constructores$NU_ENTIDADES, quantile(constructores$NU_ENTIDADES, seq(0,1, length = 5), na.rm = TRUE))
str(constructores)
summary(constructores)
palette("default")
palette(rainbow(10))
palette()
#------------------------------------------------------------------------------
par(mar = c(6.1, 6.1, 4.1, 3.1))
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
dev.copy(png, file = "desktop/RUV Mac/Data Products/Grupos Constructores - Cobertura 2015.06.png", width = 680, height = 378)
dev.off()
nrow(subset(constructores,NU_ENTIDADES == 1))/nrow(constructores)
hist(log(constructores$NU_VIVIENDAS), col = log(constructores$NU_VIVIENDAS))
rug(log(constructores$NU_VIVIENDAS), col = "grey")
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
palette(rainbow(7))
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
palette(rainbow(14))
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
palette(rainbow(9))
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
palette(rainbow(10))
plot(constructores$NU_ENTIDADES, constructores$NU_VIVIENDAS
, log = "y", panel.first = grid(col = "black")
, las = 1, mgp = c(4, 1, 0.5), cex.main = 1.5, cex = 2,
, main = "Cobertura", xlab = "Presencia estatal", ylab = "Viviendas termiandas"
, col = (log(constructores$NU_VIVIENDAS)))
constructores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.xlsx", nrows = -1)
constructores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.csv", nrows = -1)
desarrolladores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.csv", nrows = -1)
str(desarrolladores)
desarrolladores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.csv", nrows = -1)
str(desarrolladores)
library(caret)
library(kernlab)
library(pmml)
d <- dist(desarrolladores, method = "euclidean")
fit <- hclust(d, method = "ward.D")
plot(fit, cex = 0.3, hang = -1)
groups <- cutree(fit, k = 6)
rect.hclust(fit, k = 6, border = "blue")
library(ape)
plot(as.phylo(fit), label.offset = 2, cex = 0.3)
plot(as.phylo(fit), label.offset = 2, cex = 0.4, type = "fan")
library(mclust)
fit <- Mclust(desarrolladores)
plot(fit)
summary(fit)
library(cluster)
library(grid)
fit <- kmeans(desarrolladores, 6)
desarrolladores <- complete.cases(desarrolladores)
str(desarrolladores)
str(desarrolladores)
desarrolladores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.csv", nrows = -1)
desarrolladores_cc <- complete.cases(desarrolladores)
desarrolladores_cc <- desarrolladores[complete.cases(desarrolladores),]
str(desarrolladores_cc)
desarrolladores <- read.csv("desktop/RUV Mac/Data Products/Desarrolladores 2015.06.csv", nrows = -1)
desarrolladores <- desarrolladores[complete.cases(desarrolladores),]
fit <- kmeans(desarrolladores, 6)
View(desarrolladores)
summary(desarrolladores)
d <- dist(desarrolladores, method = "euclidean")
fit <- hclust(d, method = "ward.D")
plot(fit, cex = 0.3, hang = -1)
fit <- kmeans(desarrolladores, 6)
setwd("~/Documents/RepData_PeerAssessment1")
unzip("activity.zip")
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
noNA
1:nrow(noNA)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
unzip("activity.zip")
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
head(noNA)
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
head(data)
noNA <- na.omit(data)
head(noNA)
noNA
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
library(ggplot2)
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7)
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", colour = "steelblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = month, width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = month, width = 0.7)
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "corneblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "cornblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "indianred", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "indianred", width = 0.7) +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) +
geom_bar(stat = "identity", fill = "indianred", width = 0.75) +
labs(title = "Total number of steps taken each day", x = "Date", y = "Steps")
ggplot(noNA, aes(date, steps)) +
theme("bw") +
geom_bar(stat = "identity", fill = "indianred", width = 0.75) +
labs(title = "Total number of steps taken each day", x = "Date", y = "Steps")
ggplot(noNA, aes(date, steps)) +
theme_bw() +
geom_bar(stat = "identity", fill = "indianred", width = 0.75) +
labs(title = "Total number of steps taken each day", x = "Date", y = "Steps")
aggregate(noNA$steps, list(Date = noNA$date), FUN = "sum")
aggregate(noNA$steps, list(interval = as.numeric(as.character(noNA$interval))), FUN = "mean")
noNA$interval
as.character(noNA$interval)
as.numeric(as.character(noNA$interval))
as.numeric((noNA$interval))
as.numeric(noNA$interval)
aggregate(noNA$steps, list(interval = as.numeric(noNA$interval)), FUN = "mean")
avgSteps <- aggregate(noNA$steps, list(interval = as.numeric(noNA$interval)), FUN = "mean")
avgSteps
avgSteps
names(avgSteps)[2] <- "meanOfSteps"
names(avgSteps)[2]
names(avgSteps)
ggplot(avgSteps, aes(interval, meanOfSteps)) +
theme_bw() +
geom_line(color = "indianred", size = 0.75) +
labs(title = "Time series plot of the 5-minute intervals", x = "5-minute intervals", y = "Average number of steps")
ggplot(avgSteps, aes(interval, meanOfSteps)) +
#theme_bw() +
geom_line(color = "indianred", size = 0.75) +
labs(title = "Time series plot of the 5-minute intervals", x = "5-minute intervals", y = "Average number of steps")
max(avgSteps$meanOfSteps)
max(avgSteps$meanOfSteps),
[avgSteps$meanOfSteps == max(avgSteps$meanOfSteps), ]
avgSteps[avgSteps$meanOfSteps == max(avgSteps$meanOfSteps), ]
